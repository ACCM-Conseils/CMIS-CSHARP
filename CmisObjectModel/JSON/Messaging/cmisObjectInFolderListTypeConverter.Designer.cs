
/* TODO ERROR: Skipped EndIfDirectiveTrivia
#End If
*/
namespace CmisObjectModel.Messaging
{
    [Attributes.JavaScriptConverter(typeof(JSON.Messaging.cmisObjectInFolderListTypeConverter))]
    public partial class cmisObjectInFolderListType
    {
    }
}

namespace CmisObjectModel.JSON.Messaging
{
    [Attributes.AutoGenerated()]
    public partial class cmisObjectInFolderListTypeConverter : Serialization.Generic.JavaScriptConverter<CmisObjectModel.Messaging.cmisObjectInFolderListType>
    {

        #region Constructors
        public cmisObjectInFolderListTypeConverter() : base(new Serialization.Generic.DefaultObjectResolver<CmisObjectModel.Messaging.cmisObjectInFolderListType>())
        {
        }
        public cmisObjectInFolderListTypeConverter(Serialization.Generic.ObjectResolver<CmisObjectModel.Messaging.cmisObjectInFolderListType> objectResolver) : base(objectResolver)
        {
        }
        #endregion

        protected override void Deserialize(SerializationContext context)
        {
            context.Object.HasMoreItems = Read(context.Dictionary, "hasMoreItems", context.Object.HasMoreItems);
            context.Object.NumItems = ReadNullable(context.Dictionary, "numItems", context.Object.NumItems);
            context.Object.Objects = ReadArray(context, "objects", context.Object.Objects);
        }

        protected override void Serialize(SerializationContext context)
        {
            context.Add("hasMoreItems", context.Object.HasMoreItems);
            if (context.Object.NumItems.HasValue)
                context.Add("numItems", context.Object.NumItems.Value);
            WriteArray(context, context.Object.Objects, "objects");
        }
    }
}