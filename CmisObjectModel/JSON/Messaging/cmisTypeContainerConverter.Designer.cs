
// ***********************************************************************************************************************
// * Project: CmisObjectModelLibrary
// * Copyright (c) 2014, Brügmann Software GmbH, Papenburg, All rights reserved
// * Author: BSW_BER
// * Contact: opensource<at>patorg.de
// * 
// * CmisObjectModelLibrary is a VB.NET implementation of the Content Management Interoperability Services (CMIS) standard
// *
// * This file is part of CmisObjectModelLibrary.
// * 
// * This library is free software; you can redistribute it and/or
// * modify it under the terms of the GNU Lesser General Public
// * License as published by the Free Software Foundation; either
// * version 3.0 of the License, or (at your option) any later version.
// *
// * This library is distributed in the hope that it will be useful,
// * but WITHOUT ANY WARRANTY; without even the implied warranty of
// * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// * Lesser General Public License for more details.
// *
// * You should have received a copy of the GNU Lesser General Public
// * License along with this library (lgpl.txt).
// * If not, see <http://www.gnu.org/licenses/lgpl.txt>.
// ***********************************************************************************************************************
/* TODO ERROR: Skipped EndIfDirectiveTrivia
#End If
*/
namespace CmisObjectModel.Messaging
{
    [Attributes.JavaScriptConverter(typeof(JSON.Messaging.cmisTypeContainerConverter))]
    public partial class cmisTypeContainer
    {
    }
}

namespace CmisObjectModel.JSON.Messaging
{
    [Attributes.AutoGenerated()]
    public partial class cmisTypeContainerConverter : Serialization.Generic.JavaScriptConverter<CmisObjectModel.Messaging.cmisTypeContainer>
    {

        #region Constructors
        public cmisTypeContainerConverter() : base(new Serialization.Generic.DefaultObjectResolver<CmisObjectModel.Messaging.cmisTypeContainer>())
        {
        }
        public cmisTypeContainerConverter(Serialization.Generic.ObjectResolver<CmisObjectModel.Messaging.cmisTypeContainer> objectResolver) : base(objectResolver)
        {
        }
        #endregion

        protected override void Deserialize(SerializationContext context)
        {
            context.Object.Type = Read(context, "type", context.Object.Type);
            context.Object.Children = ReadArray(context, "children", context.Object.Children);
        }

        protected override void Serialize(SerializationContext context)
        {
            Write(context, context.Object.Type, "type");
            WriteArray(context, context.Object.Children, "children");
        }
    }
}