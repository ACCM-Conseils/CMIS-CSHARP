
/* TODO ERROR: Skipped EndIfDirectiveTrivia
#End If
*/
namespace CmisObjectModel.Core
{
    [Attributes.JavaScriptConverter(typeof(JSON.Core.cmisRenditionTypeConverter))]
    public partial class cmisRenditionType
    {
    }
}

namespace CmisObjectModel.JSON.Core
{
    [Attributes.AutoGenerated()]
    public partial class cmisRenditionTypeConverter : Serialization.Generic.JavaScriptConverter<CmisObjectModel.Core.cmisRenditionType>
    {

        #region Constructors
        public cmisRenditionTypeConverter() : base(new Serialization.Generic.DefaultObjectResolver<CmisObjectModel.Core.cmisRenditionType>())
        {
        }
        public cmisRenditionTypeConverter(Serialization.Generic.ObjectResolver<CmisObjectModel.Core.cmisRenditionType> objectResolver) : base(objectResolver)
        {
        }
        #endregion

        protected override void Deserialize(SerializationContext context)
        {
            context.Object.StreamId = Read(context.Dictionary, "streamId", context.Object.StreamId);
            context.Object.Mimetype = Read(context.Dictionary, "mimeType", context.Object.Mimetype);
            context.Object.Length = Read(context.Dictionary, "length", context.Object.Length);
            context.Object.Kind = Read(context.Dictionary, "kind", context.Object.Kind);
            context.Object.Title = Read(context.Dictionary, "title", context.Object.Title);
            context.Object.Height = ReadNullable(context.Dictionary, "height", context.Object.Height);
            context.Object.Width = ReadNullable(context.Dictionary, "width", context.Object.Width);
            context.Object.RenditionDocumentId = Read(context.Dictionary, "renditionDocumentId", context.Object.RenditionDocumentId);
        }

        protected override void Serialize(SerializationContext context)
        {
            context.Add("streamId", context.Object.StreamId);
            context.Add("mimeType", context.Object.Mimetype);
            context.Add("length", context.Object.Length);
            context.Add("kind", context.Object.Kind);
            if (!string.IsNullOrEmpty(context.Object.Title))
                context.Add("title", context.Object.Title);
            if (context.Object.Height.HasValue)
                context.Add("height", context.Object.Height.Value);
            if (context.Object.Width.HasValue)
                context.Add("width", context.Object.Width.Value);
            if (!string.IsNullOrEmpty(context.Object.RenditionDocumentId))
                context.Add("renditionDocumentId", context.Object.RenditionDocumentId);
        }
    }
}