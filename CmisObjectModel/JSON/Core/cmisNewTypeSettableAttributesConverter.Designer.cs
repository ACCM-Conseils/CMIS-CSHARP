
/* TODO ERROR: Skipped EndIfDirectiveTrivia
#End If
*/
namespace CmisObjectModel.Core
{
    [Attributes.JavaScriptConverter(typeof(JSON.Core.cmisNewTypeSettableAttributesConverter))]
    public partial class cmisNewTypeSettableAttributes
    {
    }
}

namespace CmisObjectModel.JSON.Core
{
    [Attributes.AutoGenerated()]
    public partial class cmisNewTypeSettableAttributesConverter : Serialization.Generic.JavaScriptConverter<CmisObjectModel.Core.cmisNewTypeSettableAttributes>
    {

        #region Constructors
        public cmisNewTypeSettableAttributesConverter() : base(new Serialization.Generic.DefaultObjectResolver<CmisObjectModel.Core.cmisNewTypeSettableAttributes>())
        {
        }
        public cmisNewTypeSettableAttributesConverter(Serialization.Generic.ObjectResolver<CmisObjectModel.Core.cmisNewTypeSettableAttributes> objectResolver) : base(objectResolver)
        {
        }
        #endregion

        protected override void Deserialize(SerializationContext context)
        {
            context.Object.Id = Read(context.Dictionary, "id", context.Object.Id);
            context.Object.LocalName = Read(context.Dictionary, "localName", context.Object.LocalName);
            context.Object.LocalNamespace = Read(context.Dictionary, "localNamespace", context.Object.LocalNamespace);
            context.Object.DisplayName = Read(context.Dictionary, "displayName", context.Object.DisplayName);
            context.Object.QueryName = Read(context.Dictionary, "queryName", context.Object.QueryName);
            context.Object.Description = Read(context.Dictionary, "description", context.Object.Description);
            context.Object.Creatable = Read(context.Dictionary, "creatable", context.Object.Creatable);
            context.Object.Fileable = Read(context.Dictionary, "fileable", context.Object.Fileable);
            context.Object.Queryable = Read(context.Dictionary, "queryable", context.Object.Queryable);
            context.Object.FulltextIndexed = Read(context.Dictionary, "fulltextIndexed", context.Object.FulltextIndexed);
            context.Object.IncludedInSupertypeQuery = Read(context.Dictionary, "includedInSupertypeQuery", context.Object.IncludedInSupertypeQuery);
            context.Object.ControllablePolicy = Read(context.Dictionary, "controllablePolicy", context.Object.ControllablePolicy);
            context.Object.ControllableACL = Read(context.Dictionary, "controllableACL", context.Object.ControllableACL);
        }

        protected override void Serialize(SerializationContext context)
        {
            context.Add("id", context.Object.Id);
            context.Add("localName", context.Object.LocalName);
            context.Add("localNamespace", context.Object.LocalNamespace);
            context.Add("displayName", context.Object.DisplayName);
            context.Add("queryName", context.Object.QueryName);
            context.Add("description", context.Object.Description);
            context.Add("creatable", context.Object.Creatable);
            context.Add("fileable", context.Object.Fileable);
            context.Add("queryable", context.Object.Queryable);
            context.Add("fulltextIndexed", context.Object.FulltextIndexed);
            context.Add("includedInSupertypeQuery", context.Object.IncludedInSupertypeQuery);
            context.Add("controllablePolicy", context.Object.ControllablePolicy);
            context.Add("controllableACL", context.Object.ControllableACL);
        }
    }
}