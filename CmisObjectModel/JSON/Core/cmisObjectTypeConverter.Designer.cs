
/* TODO ERROR: Skipped EndIfDirectiveTrivia
#End If
*/
namespace CmisObjectModel.Core
{
    [Attributes.JavaScriptConverter(typeof(JSON.Core.cmisObjectTypeConverter))]
    public partial class cmisObjectType
    {
    }
}

namespace CmisObjectModel.JSON.Core
{
    [Attributes.AutoGenerated()]
    public partial class cmisObjectTypeConverter : Serialization.Generic.JavaScriptConverter<CmisObjectModel.Core.cmisObjectType>
    {

        #region Constructors
        public cmisObjectTypeConverter() : base(new Serialization.Generic.DefaultObjectResolver<CmisObjectModel.Core.cmisObjectType>())
        {
        }
        public cmisObjectTypeConverter(Serialization.Generic.ObjectResolver<CmisObjectModel.Core.cmisObjectType> objectResolver) : base(objectResolver)
        {
        }
        #endregion

        protected override void Deserialize(SerializationContext context)
        {
            context.Object.ExactACL = ReadNullable(context.Dictionary, "exactACL", context.Object.ExactACL);
            context.Object.Properties = Read(context, "properties", context.Object.Properties);
            context.Object.PropertiesExtension = Read(context, "propertiesExtension", context.Object.PropertiesExtension);
            context.Object.AllowableActions = Read(context, "allowableActions", context.Object.AllowableActions);
            context.Object.ChangeEventInfo = Read(context, "changeEventInfo", context.Object.ChangeEventInfo);
            context.Object.Acl = Read(context, "acl", context.Object.Acl);
            context.Object.PolicyIds = Read(context, "policyIds", context.Object.PolicyIds);
            context.Object.Relationships = ReadArray(context, "relationships", context.Object.Relationships);
            context.Object.Renditions = ReadArray(context, "renditions", context.Object.Renditions);
        }

        protected override void Serialize(SerializationContext context)
        {
            if (context.Object.ExactACL.HasValue)
                context.Add("exactACL", context.Object.ExactACL.Value);
            Write(context, context.Object.Properties, "properties");
            Write(context, context.Object.PropertiesExtension, "propertiesExtension");
            Write(context, context.Object.AllowableActions, "allowableActions");
            Write(context, context.Object.ChangeEventInfo, "changeEventInfo");
            Write(context, context.Object.Acl, "acl");
            Write(context, context.Object.PolicyIds, "policyIds");
            WriteArray(context, context.Object.Relationships, "relationships");
            WriteArray(context, context.Object.Renditions, "renditions");
        }
    }
}